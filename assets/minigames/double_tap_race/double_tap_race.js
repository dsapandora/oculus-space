// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Minigames.DoubleTapRace = (function(_super) {

    __extends(DoubleTapRace, _super);

    function DoubleTapRace() {
      this.gameover = __bind(this.gameover, this);

      this.render = __bind(this.render, this);

      this.start = __bind(this.start, this);
      return DoubleTapRace.__super__.constructor.apply(this, arguments);
    }

    DoubleTapRace.NAME = 'DoubleTapRace';

    DoubleTapRace.INSTRUCTIONS = 'DoubleTapRace is a fun game. Click the buttons to move legs.';

    DoubleTapRace.TEMPLATES = "/assets/minigames/double_tap_race/templates/templates.js";

    DoubleTapRace.STYLESHEET = "/assets/minigames/double_tap_race/css/double_tap_race.css";

    DoubleTapRace.prototype.init = function() {};

    DoubleTapRace.prototype.start = function() {
      var _this = this;
      this.score = 0;
      $('head').append("<link rel='stylesheet' href='" + this.constructor.STYLESHEET + "'>");
      return $.getScript(this.constructor.TEMPLATES).done(function(script, textStatus) {
        var that;
        console.log("New minigame: " + _this.constructor.NAME);
        _this.el = $("<div></div>").addClass('active view minigame').attr("id", "double-tap-race-minigame");
        $('.active.view').removeClass('active').hide();
        $('body').append(_this.el);
        _this.render();
        that = _this;
        _this.el.find(".btn").bind('touchstart', function() {
          if ($(this).hasClass("active")) {
            $(this).siblings(".btn").addClass("active");
            $(this).removeClass("active");
            that.score++;
            return that.render();
          }
        });
        return setTimeout(_this.gameover, 15000);
      });
    };

    DoubleTapRace.prototype.render = function() {
      return this.el.html(_.template(App.Minigames.DoubleTapRace.Templates.main_view, {
        score: this.score
      }));
    };

    DoubleTapRace.prototype.gameover = function() {
      return App.metagame.gameover(this);
    };

    return DoubleTapRace;

  })(App.Minigames.Default);

  App.metagame.addMinigame(App.Minigames.DoubleTapRace);

}).call(this);
