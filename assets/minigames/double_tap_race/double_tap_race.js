// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Minigames.DoubleTapRace = (function(_super) {

    __extends(DoubleTapRace, _super);

    function DoubleTapRace() {
      this.receiveBroadcast = __bind(this.receiveBroadcast, this);

      this.gameover = __bind(this.gameover, this);

      this.render = __bind(this.render, this);

      this.start = __bind(this.start, this);
      return DoubleTapRace.__super__.constructor.apply(this, arguments);
    }

    DoubleTapRace.NAME = 'DoubleTapRace';

    DoubleTapRace.INSTRUCTIONS = 'DoubleTapRace is a fun game. Click the buttons to move legs.';

    DoubleTapRace.TEMPLATES = "/assets/minigames/double_tap_race/templates/templates.js";

    DoubleTapRace.STYLESHEET = "/assets/minigames/double_tap_race/css/double_tap_race.css";

    DoubleTapRace.prototype.init = function() {
      var _this = this;
      DoubleTapRace.__super__.init.apply(this, arguments);
      this.dist = 0;
      _.each(this.players, function(player) {
        return player.dist = 0;
      });
      $('head').append("<link rel='stylesheet' href='" + this.constructor.STYLESHEET + "'>");
      return $.getScript(this.constructor.TEMPLATES).done(function(script, textStatus) {
        _this.el = $("<div>").addClass('active view').attr("id", "double-tap-race-minigame");
        return _this.el.html(_.template(App.Minigames.DoubleTapRace.Templates.main_view));
      });
    };

    DoubleTapRace.prototype.start = function() {
      var that;
      $('body').append(this.el);
      this.render();
      that = this;
      return this.el.find(".btn").bind('click touchstart', function() {
        if ($(this).hasClass("active")) {
          $(this).siblings(".btn").addClass("active");
          $(this).removeClass("active");
          that.dist += 10;
          that.broadcast('player: scored', {
            dist: that.dist
          });
          return that.render();
        }
      });
    };

    DoubleTapRace.prototype.render = function() {
      $('.score').text('Distance = ' + this.dist);
      return this.el.find(".progress").html(_.template(App.Minigames.DoubleTapRace.Templates.player_view, {
        players: this.players
      }));
    };

    DoubleTapRace.prototype.gameover = function() {
      $(this.el).fadeOut();
      this.score = this.dist;
      App.metagame.gameover(this);
      return this.el.fadeOut();
    };

    DoubleTapRace.prototype.receiveBroadcast = function(event, data, player_id) {
      var player, _i, _len, _ref, _results;
      if (player_id != null) {
        _ref = this.players;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          player = _ref[_i];
          if (player.id === player_id) {
            player.dist = data.dist;
            if (player.dist + 50 === parseInt(this.el.css('width'))) {
              this.gameover();
            }
            this.render();
            break;
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    };

    return DoubleTapRace;

  })(App.Minigames.Default);

  App.metagame.addMinigame(App.Minigames.DoubleTapRace);

}).call(this);
