// Generated by CoffeeScript 1.4.0
(function() {

  App.Minigames.Default = (function() {

    function Default() {
      this.id = Math.random().toString(36).substring(2, 8);
    }

    Default.prototype.init = function() {
      var new_player, player, _i, _len, _ref, _results;
      this.players = [];
      _ref = App.metagame.players;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        player = _ref[_i];
        new_player = jQuery.extend(true, {}, player);
        _results.push(this.players.push(new_player));
      }
      return _results;
    };

    Default.prototype.playersUpdated = function() {};

    Default.prototype.receiveBroadcast = function(event, data, player_id) {};

    Default.prototype.broadcast = function(event, data) {
      if (data == null) {
        data = {};
      }
      return App.metagame.sendBroadcast(event, data);
    };

    Default.prototype.getPlayer = function(id) {
      var player, _i, _len, _ref;
      _ref = this.players;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        player = _ref[_i];
        if (player.id === id) {
          return player;
        }
      }
      return null;
    };

    Default.prototype.getCurrentPlayer = function() {
      return this.getPlayer(App.player_id);
    };

    Default.prototype.gameover = function() {
      return App.metagame.gameover(Math.floor(Math.random() * 10));
    };

    Default.prototype.proxyFetch = function(url) {
      return App.metagame.proxyFetch(url);
    };

    Default.prototype.proxyFetchReturn = function(data) {
      return console.log(JSON.parse(data));
    };

    return Default;

  })();

}).call(this);
