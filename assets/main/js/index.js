// Generated by CoffeeScript 1.6.3
(function() {
  var socket;

  window.App = {
    room: null,
    data: {},
    useRift: true,
    controllerConnected: false
  };

  socket = io.connect('/');

  socket.on("disconnect", function(data) {
    $('#disconnected').fadeIn(500);
    return setTimeout("location.href = '/'", 4500);
  });

  socket.on('connect', function() {
    socket.emit('init: add client');
    return console.log("Establishing room...");
  });

  socket.on("init: connected to room", function(data) {
    console.log("Connected to room: " + data.room);
    App.room = data.room;
    return $('.room').text(App.room);
  });

  socket.on("room: data", function(data) {
    var key, value, _results;
    App.controllerConnected = true;
    $('#hud .controller .disconnected, .overlay').fadeOut(250);
    $('#hud .controller .connected').fadeIn(250);
    App.data = data;
    _results = [];
    for (key in data) {
      value = data[key];
      if (typeof value === "number") {
        _results.push($("#" + key).text(value.toFixed(2)));
      } else {
        _results.push($("#" + key).text(value));
      }
    }
    return _results;
  });

  socket.on("server: controller disconnected", function(data) {
    $('#hud .controller .disconnected, .overlay').fadeIn(250);
    $('#hud .controller .connected').fadeOut(250);
    return App.controllerConnected = false;
  });

  document.addEventListener('keydown', function(event) {
    if (event.keyCode === 68) {
      return $('.debug').toggle();
    } else if (event.keyCode === 82 && App.data) {
      return App.recalibration = {
        viewAngle: App.viewAngle,
        bodyAngle: App.bodyAngle,
        bodyVerticalAngle: App.bodyVerticalAngle
      };
    } else if (event.keyCode === 87) {
      return App.speed += 0.2;
    } else if (event.keyCode === 83) {
      return App.speed = Math.max(App.speed - 0.2, 0);
    }
  });

}).call(this);
